1. Назва проекту

Базовий калькулятор на C++ з історією обчислень та підтримкою змінних

2. Мета проекту

Створити зручний консольний калькулятор.

Підтримувати арифметичні операції, факторіал, піднесення до степеня, квадратний корінь.

Додавати змінні для обчислень (x=5, y+2).

Зберігати історію обчислень у файл history.txt.

Навчитися модульній структурі проекту та роботі з файлами.

3. Використані технології

Мова програмування: C++

Стандартні бібліотеки: iostream, string, map, cmath, fstream

Консольний інтерфейс з UTF-8 підтримкою

Модульна структура через h/cpp файли

Enum для меню

4. Структура проекту

calculator.h / calculator.cpp – логіка калькулятора

Обчислення факторіалу, степенів, арифметики, sqrt

Обробка змінних та присвоєнь

history.h / history.cpp – історія обчислень

Збереження результатів у history.txt

Вивід усієї історії

main.cpp – меню та взаємодія з користувачем

Вибір функції через enum MenuOption

Введення виразів

Вивід результатів

Обробка помилок

5. Основні функції та їх призначення
Функція	Призначення
factorial(double n)	Обчислює факторіал числа n, перевірка на від’ємні числа
compute(double a, double b, char op)	Виконує арифметичні операції (+,-,*,/,^)
eval(string expr)	Головна функція обчислення; підтримує змінні та присвоєння
eval_simple(string expr)	Обчислення простих виразів, підтримка факторіалу, степенів, sqrt
save_history(string entry)	Додає результат обчислення у файл history.txt
show_history()	Виводить усю історію обчислень на екран
6. Меню програми

Арифметика (+ - * /)

Піднесення до степеня (^, ^2, ^3)

Факторіал (!)

Квадратний корінь (sqrt)

Використання змінних (x=5, y+2)

Історія обчислень (history.txt)

Вихід

Примітка: Пункти меню реалізовані через enum MenuOption, що робить код більш зрозумілим та зручним для розширення.

7. Особливості проекту

Модульність: файли розділені логічно, легко додавати нові функції.

Історія обчислень: всі обчислення зберігаються у файлі, користувач може переглянути.

Підтримка змінних: можна створювати власні змінні і використовувати їх у формулах.

Розширюваність: можна легко додати нові функції (тригонометрію, логарифми).

Обробка помилок: програма виводить повідомлення про некоректні вирази або ділення на нуль.

8. Демонстрація роботи

Приклади обчислень:

Арифметика: 5 + 3 → 8

Степінь: 2^3 → 8, 5^2 → 25

Факторіал: 4! → 24

Квадратний корінь: sqrt(16) → 4

Змінні: x=10, x+5 → 15

Історія обчислень: перегляд history.txt

9. Переваги проекту

Зручний інтерфейс через консоль

Підтримка різних математичних операцій

Легко додавати нові функції

Зберігає історію для користувача

Використовує сучасний підхід з enum та модульною структурою

10. Можливі покращення

Додати тригонометричні функції (sin, cos, tan)

Підтримку дробових факторіалів (Gamma-функція)

Графічний інтерфейс через Qt або SFML

Підсвітку та кольорове меню в консолі

11. Висновок

Проект показує, як можна поєднати логіку, роботу з файлами та модульну структуру в C++.

Зручний та навчальний для використання в навчальних цілях.

Може бути базою для створення більш складного калькулятора або навчального ПЗ.